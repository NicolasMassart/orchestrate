// Code generated by MockGen. DO NOT EDIT.
// Source: jobs_listener.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobsListener is a mock of JobsListener interface
type MockJobsListener struct {
	ctrl     *gomock.Controller
	recorder *MockJobsListenerMockRecorder
}

// MockJobsListenerMockRecorder is the mock recorder for MockJobsListener
type MockJobsListenerMockRecorder struct {
	mock *MockJobsListener
}

// NewMockJobsListener creates a new mock instance
func NewMockJobsListener(ctrl *gomock.Controller) *MockJobsListener {
	mock := &MockJobsListener{ctrl: ctrl}
	mock.recorder = &MockJobsListenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJobsListener) EXPECT() *MockJobsListenerMockRecorder {
	return m.recorder
}

// Listen mocks base method
func (m *MockJobsListener) Listen(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Listen", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Listen indicates an expected call of Listen
func (mr *MockJobsListenerMockRecorder) Listen(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Listen", reflect.TypeOf((*MockJobsListener)(nil).Listen), ctx)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: src/infra/kafka/proto/tx.proto

package proto

import (
	error1 "github.com/consensys/orchestrate/pkg/types/error"
	ethereum "github.com/consensys/orchestrate/pkg/types/ethereum"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the Response in UUID RFC 4122, ISO/IEC 9834-8:2005 format
	// e.g a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the Chain as registered on the chain registry
	// e.g. 1 for mainnet, 3 for Ropsten
	Chain string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	// ID of the Job created as part of transaction request
	// e.g 15276759-bbc6-4ead-ad51-ddfecf79cf09
	JobUUID string `protobuf:"bytes,3,opt,name=jobUUID,proto3" json:"jobUUID,omitempty"`
	// Extra information (optional)
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// [option]
	ContextLabels map[string]string     `protobuf:"bytes,5,rep,name=context_labels,json=contextLabels,proto3" json:"context_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Transaction   *ethereum.Transaction `protobuf:"bytes,6,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Receipt       *ethereum.Receipt     `protobuf:"bytes,7,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Errors        []*error1.Error       `protobuf:"bytes,8,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *TxResponse) Reset() {
	*x = TxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_infra_broker_proto_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResponse) ProtoMessage() {}

func (x *TxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_infra_broker_proto_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResponse.ProtoReflect.Descriptor instead.
func (*TxResponse) Descriptor() ([]byte, []int) {
	return file_src_infra_broker_proto_tx_proto_rawDescGZIP(), []int{0}
}

func (x *TxResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TxResponse) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TxResponse) GetJobUUID() string {
	if x != nil {
		return x.JobUUID
	}
	return ""
}

func (x *TxResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TxResponse) GetContextLabels() map[string]string {
	if x != nil {
		return x.ContextLabels
	}
	return nil
}

func (x *TxResponse) GetTransaction() *ethereum.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TxResponse) GetReceipt() *ethereum.Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *TxResponse) GetErrors() []*error1.Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_src_infra_broker_proto_tx_proto protoreflect.FileDescriptor

var file_src_infra_broker_proto_tx_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x72, 0x63, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x03, 0x0a, 0x0a, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6a,
	0x6f, 0x62, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x55, 0x55, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x37, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x79, 0x73, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x2f, 0x73,
	0x72, 0x63, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_infra_broker_proto_tx_proto_rawDescOnce sync.Once
	file_src_infra_broker_proto_tx_proto_rawDescData = file_src_infra_broker_proto_tx_proto_rawDesc
)

func file_src_infra_broker_proto_tx_proto_rawDescGZIP() []byte {
	file_src_infra_broker_proto_tx_proto_rawDescOnce.Do(func() {
		file_src_infra_broker_proto_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_infra_broker_proto_tx_proto_rawDescData)
	})
	return file_src_infra_broker_proto_tx_proto_rawDescData
}

var file_src_infra_broker_proto_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_src_infra_broker_proto_tx_proto_goTypes = []interface{}{
	(*TxResponse)(nil),           // 0: TxResponse
	nil,                          // 1: TxResponse.HeadersEntry
	nil,                          // 2: TxResponse.ContextLabelsEntry
	(*ethereum.Transaction)(nil), // 3: ethereum.Transaction
	(*ethereum.Receipt)(nil),     // 4: ethereum.Receipt
	(*error1.Error)(nil),         // 5: error.Error
}
var file_src_infra_broker_proto_tx_proto_depIdxs = []int32{
	1, // 0: TxResponse.headers:type_name -> TxResponse.HeadersEntry
	2, // 1: TxResponse.context_labels:type_name -> TxResponse.ContextLabelsEntry
	3, // 2: TxResponse.transaction:type_name -> ethereum.Transaction
	4, // 3: TxResponse.receipt:type_name -> ethereum.Receipt
	5, // 4: TxResponse.errors:type_name -> error.Error
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_src_infra_broker_proto_tx_proto_init() }
func file_src_infra_broker_proto_tx_proto_init() {
	if File_src_infra_broker_proto_tx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_infra_broker_proto_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_infra_broker_proto_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_infra_broker_proto_tx_proto_goTypes,
		DependencyIndexes: file_src_infra_broker_proto_tx_proto_depIdxs,
		MessageInfos:      file_src_infra_broker_proto_tx_proto_msgTypes,
	}.Build()
	File_src_infra_broker_proto_tx_proto = out.File
	file_src_infra_broker_proto_tx_proto_rawDesc = nil
	file_src_infra_broker_proto_tx_proto_goTypes = nil
	file_src_infra_broker_proto_tx_proto_depIdxs = nil
}

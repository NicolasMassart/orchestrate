// Code generated by MockGen. DO NOT EDIT.
// Source: exported.go

// Package mock is a generated GoMock package.
package mock

import (
	metrics "github.com/go-kit/kit/metrics"
	gomock "github.com/golang/mock/gomock"
	prometheus "github.com/prometheus/client_golang/prometheus"
	reflect "reflect"
)

// MockTransactionSchedulerMetrics is a mock of TransactionSchedulerMetrics interface
type MockTransactionSchedulerMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionSchedulerMetricsMockRecorder
}

// MockTransactionSchedulerMetricsMockRecorder is the mock recorder for MockTransactionSchedulerMetrics
type MockTransactionSchedulerMetricsMockRecorder struct {
	mock *MockTransactionSchedulerMetrics
}

// NewMockTransactionSchedulerMetrics creates a new mock instance
func NewMockTransactionSchedulerMetrics(ctrl *gomock.Controller) *MockTransactionSchedulerMetrics {
	mock := &MockTransactionSchedulerMetrics{ctrl: ctrl}
	mock.recorder = &MockTransactionSchedulerMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransactionSchedulerMetrics) EXPECT() *MockTransactionSchedulerMetricsMockRecorder {
	return m.recorder
}

// JobsLatencyHistogram mocks base method
func (m *MockTransactionSchedulerMetrics) JobsLatencyHistogram() metrics.Histogram {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JobsLatencyHistogram")
	ret0, _ := ret[0].(metrics.Histogram)
	return ret0
}

// JobsLatencyHistogram indicates an expected call of JobsLatencyHistogram
func (mr *MockTransactionSchedulerMetricsMockRecorder) JobsLatencyHistogram() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JobsLatencyHistogram", reflect.TypeOf((*MockTransactionSchedulerMetrics)(nil).JobsLatencyHistogram))
}

// MinedLatencyHistogram mocks base method
func (m *MockTransactionSchedulerMetrics) MinedLatencyHistogram() metrics.Histogram {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MinedLatencyHistogram")
	ret0, _ := ret[0].(metrics.Histogram)
	return ret0
}

// MinedLatencyHistogram indicates an expected call of MinedLatencyHistogram
func (mr *MockTransactionSchedulerMetricsMockRecorder) MinedLatencyHistogram() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MinedLatencyHistogram", reflect.TypeOf((*MockTransactionSchedulerMetrics)(nil).MinedLatencyHistogram))
}

// Describe mocks base method
func (m *MockTransactionSchedulerMetrics) Describe(arg0 chan<- *prometheus.Desc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Describe", arg0)
}

// Describe indicates an expected call of Describe
func (mr *MockTransactionSchedulerMetricsMockRecorder) Describe(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Describe", reflect.TypeOf((*MockTransactionSchedulerMetrics)(nil).Describe), arg0)
}

// Collect mocks base method
func (m *MockTransactionSchedulerMetrics) Collect(arg0 chan<- prometheus.Metric) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Collect", arg0)
}

// Collect indicates an expected call of Collect
func (mr *MockTransactionSchedulerMetricsMockRecorder) Collect(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Collect", reflect.TypeOf((*MockTransactionSchedulerMetrics)(nil).Collect), arg0)
}

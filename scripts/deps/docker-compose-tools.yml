version: '3.7'

services:
  portainer:
    image: portainer/portainer:1.23.1
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  pgadmin:
    image: dpage/pgadmin4:4.21
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    restart: unless-stopped
    volumes:
      - pgadmin:/root/.pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
      - ./config/pgadmin/password:/pgadmin4/password
    ports:
      - 9001:80
    networks:
      - orchestrate

  redisinsight:
    image: redislabs/redisinsight:1.6.0
    ports:
      - 8001:8001
    volumes: []
    #- redisinsight:/db
    networks:
      - orchestrate

  prometheus:
    image: prom/prometheus:v2.22.0
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - orchestrate

  grafana:
    image: grafana/grafana:7.2.2
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    networks:
      - orchestrate

  nginx:
    image: nginx:1.19
    ports:
      - 4545:4545
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - orchestrate

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:0.8.0
    ports:
      - 9113:9113
    environment:
      SCRAPE_URI: "http://nginx:4545/nginx_status"
      TELEMETRY_PATH: "/prometheus"
    networks:
      - orchestrate
    depends_on:
      - nginx

volumes:
  portainer_data:
  pgadmin:
    driver: local


networks:
  orchestrate:
    external:
      name: deps_orchestrate
